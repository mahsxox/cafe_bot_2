class Cart:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        self.user_carts = {}

    def _validate_user_id(self, user_id: int):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        if not isinstance(user_id, int) or user_id <= 0:
            raise ValueError("–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")

    def _validate_product(self, product_name: str, product_price: int = None):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞."""
        if not isinstance(product_name, str) or not product_name.strip():
            raise ValueError("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.")
        if product_price is not None:
            if not isinstance(product_price, int) or product_price < 0:
                raise ValueError("–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")

    def add(self, user_id: int, product_name: str, product_price: int):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É."""
        self._validate_user_id(user_id)
        self._validate_product(product_name, product_price)

        if user_id not in self.user_carts:
            self.user_carts[user_id] = {}
        if product_name in self.user_carts[user_id]:
            self.user_carts[user_id][product_name]['quantity'] += 1
        else:
            self.user_carts[user_id][product_name] = {'price': product_price, 'quantity': 1}

    def remove(self, user_id: int, product_name: str):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã."""
        self._validate_user_id(user_id)
        self._validate_product(product_name)

        if user_id in self.user_carts and product_name in self.user_carts[user_id]:
            del self.user_carts[user_id][product_name]

    def edit_quantity(self, user_id: int, product_name: str, change: int):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞."""
        self._validate_user_id(user_id)
        self._validate_product(product_name)

        if not isinstance(change, int):
            raise ValueError("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")

        if user_id in self.user_carts and product_name in self.user_carts[user_id]:
            self.user_carts[user_id][product_name]['quantity'] += change
            if self.user_carts[user_id][product_name]['quantity'] < 1:
                self.remove(user_id, product_name)

    def clear(self, user_id: int):
        """–û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã."""
        self._validate_user_id(user_id)

        if user_id in self.user_carts:
            self.user_carts[user_id] = {}

    def show(self, user_id: int) -> str:
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã."""
        self._validate_user_id(user_id)

        if user_id not in self.user_carts or not self.user_carts[user_id]:
            return '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.'

        cart_text = 'üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n'
        total_price = 0

        for product, info in self.user_carts[user_id].items():
            quantity = info['quantity']
            price = info['price']
            cart_text += f'‚Ä¢ {product} - {quantity} —à—Ç. x {price} —Ä—É–± = {quantity * price} —Ä—É–±\n'
            total_price += quantity * price

        cart_text += f'\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total_price} —Ä—É–±'
        return cart_text

    def get_total_price(self, user_id: int) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã."""
        self._validate_user_id(user_id)

        return sum(
            item['quantity'] * item['price']
            for item in self.user_carts.get(user_id, {}).values()
        )

cart = Cart()
